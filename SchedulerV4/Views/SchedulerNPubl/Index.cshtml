@model List<SchedulerV4.Models.ScheduleNPublEntity>

@{
    ViewData["Title"] = "Расписание";
    var groupList = ViewBag.GroupList as List<SelectListItem>;
    int? filteredGroupNo = ViewBag.FilteredGroupNo as int?;
}

<style>
    .add-btn {
        display: inline-block;
        padding: 10px 25px;
        font-size: 17px;
        background-color: #28a745;
        color: white;
        border-radius: 6px;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

        .add-btn:hover {
            background-color: #218838;
        }

    .form-row {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 20px;
        background: #fff;
        padding: 30px 40px;
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        width: 100%; /* растянуть на всю ширину */
        max-width: none; /* убрать ограничение */
        margin: 0 auto 40px;
    }

    label {
        font-size: 15px;
        color: #555;
        width: auto;
    }

    select {
        width: 350px;
        height: 50px;
        font-size: 15px;
        padding: 0 15px;
        border: 2px solid #ddd;
        border-radius: 8px;
        transition: border-color 0.3s ease;
        background-color: white;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23333' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 15px center;
        background-size: 20px 20px;
    }

        select:focus {
            border-color: #0088CE;
            outline: none;
            box-shadow: 0 0 8px rgba(0, 136, 206, 0.3);
        }

    button {
        font-size: 15px;
        height: 48px;
        background: #0088CE;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        width: auto;
        text-align: center;
        padding: 5px 10px;
    }

        button:hover {
            background: #006fa1;
        }

    table {
        width: 100%;
        border-collapse: collapse;
        background: white;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    th {
        background-color: #0088CE;
        color: white;
    }

    body {
        color: #333;
    }

    h1 {
        font-size: 40px;
        text-align: center;
        margin-bottom: 30px;
    }

    h2 {
        font-size: 30px;
        text-align: center;
        margin-bottom: 30px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        background: white;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    th, td {
        border: 1px solid #ddd;
        padding: 8px 10px;
        text-align: center;
        font-size: 15px;
    }

    th {
        background-color: #0088CE;
        color: white;
    }

    button {
        padding: 5px 10px;
        background-color: #0088CE;
        border: none;
        color: white;
        border-radius: 4px;
        cursor: pointer;
    }

        button:hover {
            background-color: #006fa1;
        }
    /* Модальное окно */
    .modal {
        display: none; /* скрыто по умолчанию */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background: white;
        padding: 25px 30px;
        border-radius: 10px;
        width: 500px;
        max-width: 90%;
        box-shadow: 0 8px 30px rgba(0,0,0,0.3);
    }

    .modal-header {
        font-size: 28px;
        margin-bottom: 20px;
        font-weight: bold;
        text-align: center;
    }

    .modal-row {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 15px;
        margin-bottom: 15px;
    }

        .modal-row label {
            width: 200px; /* одинаковая ширина у всех меток */
            font-size: 18px;
        }

        .modal-row select,
        .modal-row input[type="text"],
        .modal-row input[type="date"],
        .modal-row input[type="time"] {
            flex-grow: 1;
            font-size: 18px;
            padding: 6px 10px;
            border: 1.5px solid #ccc;
            border-radius: 6px;
            width: 100%; /* чтобы занимал доступное пространство */
            box-sizing: border-box;
        }

    .modal-footer {
        margin-top: 25px;
        text-align: center;
    }

        .modal-footer button {
            margin: 0 10px;
            padding: 10px 25px;
            font-size: 18px;
        }

    #dateInputs input[type="date"] {
        margin-bottom: 5px;
        display: block;
    }
</style>

<h1>Расписание занятий</h1>

@*                                     Ф И Л Ь Т Р Ы *@

<div class="form-row">
    <label for="groupSelect">Номер группы:</label>
    <select id="groupSelect" name="groupId">
        <option value="">-- Все группы --</option>
        @foreach (var group in groupList)
        {
                @if (ViewBag.SelectedGroupId?.ToString() == group.Value)
                {
                    <option value="@group.Value" selected>@group.Text</option>
                }
                else
                {
                    <option value="@group.Value">@group.Text</option>
                }
        }
    </select>
    <label for="tipSelect">Тип занятия:</label>
    <select id="tipSelect" name="tip">
        <option value="">-- Выберите тип --</option>
        @if (ViewBag.SelectedTip?.ToString() == "1")
        {
            <option value="1" selected>дневное</option>
        }
        else
        {
            <option value="1">дневное</option>
        }
        @if (ViewBag.SelectedTip?.ToString() == "2")
        {
            <option value="2" selected>экзамен</option>
        }
        else
        {
            <option value="2">экзамен</option>
        }
        @if (ViewBag.SelectedTip?.ToString() == "3")
        {
            <option value="3" selected>заочное</option>
        }
        else
        {
            <option value="3">заочное</option>
        }
    </select>

    <label for="semesterSelect">Семестр:</label>
    <select id="semesterSelect" name="semester">
        <option value="">-- Выберите семестр --</option>
        @if (ViewBag.SelectedSemester?.ToString() == "1")
        {
            <option value="1" selected>осенний</option>
        }
        else
        {
            <option value="1">осенний</option>
        }
        @if (ViewBag.SelectedSemester?.ToString() == "2")
        {
            <option value="2" selected>весенний</option>
        }
        else
        {
            <option value="2">весенний</option>
        }
    </select>

    <label for="yearSelect">Год:</label>
    <select id="yearSelect" name="year">
        <option value="">-- Выберите год --</option>
        @{
            int currentYear = DateTime.Now.Year;
            for (int y = currentYear - 1; y <= currentYear + 1; y++)
            {
                if (ViewBag.SelectedYear?.ToString() == y.ToString())
                {
                    <option value="@y" selected>@y</option>
                }
                else
                {
                    <option value="@y">@y</option>
                }
            }
        }
    </select>
    @* <button type="button" id="showScheduleBtn" style="width:300px">Показать расписание</button> *@
</div>

@*                                    Кнопка Добавить при выборе группы *@

<script>
    document.getElementById('showScheduleBtn').addEventListener('click', () => {
        const groupId = document.getElementById('groupSelect').value;
        const tip = document.getElementById('tipSelect').value;
        const semester = document.getElementById('semesterSelect').value;
        const year = document.getElementById('yearSelect').value;

        const params = new URLSearchParams();

        if (groupId) params.append('groupId', groupId);
        if (tip) params.append('tip', tip);
        if (semester) params.append('semester', semester);
        if (year) params.append('year', year);

        const query = params.toString();
        window.location.href = `/SchedulerNPubl/Index${query ? '?' + query : ''}`;
    });
</script>

@if (ViewBag.ShowAddButton == true)
{
    <button type="button" id="openCreateModalBtn">Добавить занятие</button>
}

@*                                    Д О Б А В Л Е Н И Е   О К Н О *@

<div class="modal" id="createModal">
    <div class="modal-content">
        <div class="modal-header">Добавление занятия группе номер 
            @if (filteredGroupNo.HasValue)
            {
                <text>@filteredGroupNo</text>
            }
        </div>
        <form id="transferForm">
            <input type="hidden" id="createGroupNo" name="GROUPNO" value="@ViewBag.FilteredGroupNo" />
            <div class="modal-row">
                <label style="width:200px" for="paritySelect">Четность</label>
                <select id="paritySelect">
                    <option value="">Выберите</option>
                    <option value="чет/неч">чет/неч</option>
                    <option value="чет">чет</option>
                    <option value="неч">неч</option>
                </select>
            </div>
            <div class="modal-row" id="datePickerRow">
                <label style="width:200px">Доп. даты</label>
                <div id="dateInputs" style="flex-grow:1;">
                    <input type="date" class="extra-date" />
                </div>
                <button type="button" onclick="addDateInput()">+</button>
            </div>
            <!-- Скрытое поле для сохранения итогового значения -->
            <input type="hidden" name="DATA" id="hiddenDataField" />
            <div class="modal-row">
                <label style="width:200px" for="createDay">День</label>
                <select name="DEN" required>
                    <option value="">Выберите день</option>
                    <option value="пн">пн</option>
                    <option value="вт">вт</option>
                    <option value="ср">ср</option>
                    <option value="чт">чт</option>
                    <option value="пт">пт</option>
                    <option value="сб">сб</option>
                </select>
            </div>
            <div class="modal-row">
                <label style="width:200px" for="createTime">Время</label>
                <select name="VREM" required>
                    <option value="">Выберите время</option>
                    <option value="08:00">08:00</option>
                    <option value="09:40">09:40</option>
                    <option value="11:20">11:20</option>
                    <option value="13:30">13:30</option>
                    <option value="15:10">15:10</option>
                    <option value="16:50">16:50</option>
                    <option value="18:25">18:25</option>
                    <option value="20:00">20:00</option>
                </select>
            </div>
            <div class="modal-row">
                <label style="width:200px" for="createDiscipline">Дисциплина</label>
                <select name="DISCIPL_NUM" required>
                    <option value="">Выберите дисциплину</option>
                    @foreach (var item in ViewBag.Disciplins as List<SelectListItem>)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
            <div class="modal-row">
                <label style="width:200px" for="createFormZan">Вид занятия</label>
                <select name="FORM_ZAN" required>
                    <option value="">Выберите вид занятия</option>
                    <option value="лек">лек</option>
                    <option value="пр">пр</option>
                    <option value="л.р.">л.р.</option>
                </select>
            </div>
            <div class="modal-row">
                <label style="width:200px" for="createAud">Аудитория</label>
                <select id="createAud" name="AUDITORIYA" required>
                    <option value="">Выберите аудиторию</option>
                    @foreach (var a in ViewBag.Auditories as List<SelectListItem>)
                    {
                        <option value="@a.Value">@a.Text</option>
                    }
                </select>
            </div>
            <div class="modal-row">
                <label style="width:200px" for="createBuilding">Здание</label>
                <select id="createBuilding" name="ZDANIE" required>
                    <option value="">Выберите здание</option>
                    @foreach (var item in ViewBag.Buildings as List<SelectListItem>)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
            <div class="modal-row">
                <label style="width:200px" for="createTeacher">Преподаватель</label>
                <select id="createTeacher" name="PREPODAVATEL" required>
                    <option value="">Выберите преподавателя</option>
                    @foreach (var t in ViewBag.Prepodavatels as List<SelectListItem>)
                    {
                        <option value="@t.Value">@t.Text</option>
                    }
                </select>
            </div>
            <input type="hidden" id="hiddenTip" name="TIP" />
            <input type="hidden" id="hiddenSemester" name="SEMESTR" />
            <input type="hidden" id="hiddenYear" name="YEARF" />
            <div class="modal-footer">
                <button type="submit">Добавить</button>
                <button type="button" id="cancelCreateBtn">Отмена</button>
            </div>
        </form>
    </div>
</div>

@*                                   Открытие/закрытие модального окна *@

<script>
    const createModal = document.getElementById('createModal');
    const openCreateModalBtn = document.getElementById('openCreateModalBtn');
    const cancelCreateBtn = document.getElementById('cancelCreateBtn');
    const createForm = document.getElementById('transferForm');

    openCreateModalBtn.addEventListener('click', () => {
        const groupId = document.getElementById('groupSelect').value;
        const tip = document.getElementById('tipSelect').value;
        const semester = document.getElementById('semesterSelect').value;
        const year = document.getElementById('yearSelect').value;

        if (!groupId || !tip || !semester || !year) {
            alert("Пожалуйста, выберите все фильтры: группу, тип занятия, семестр и год перед добавлением.");
            return;
        }

        document.getElementById('hiddenTip').value = tip;
        document.getElementById('hiddenSemester').value = semester;
        document.getElementById('hiddenYear').value = year;

        createModal.style.display = 'flex';
    });

    cancelCreateBtn.addEventListener('click', () => {
        createModal.style.display = 'none';
        createForm.reset();
    });

    window.addEventListener('click', (e) => {
        if (e.target === createModal) {
            createModal.style.display = 'none';
            createForm.reset();
        }
    });
</script>

@*                                    Для дат *@

<script>
    function addDateInput() {
        const container = document.getElementById('dateInputs');
        const input = document.createElement('input');
        input.type = 'date';
        input.className = 'extra-date';
        container.appendChild(document.createElement('br'));
        container.appendChild(input);
    }
</script>

@*                                    Добавление строки *@

<script>
        document.getElementById('transferForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        const parity = document.getElementById('paritySelect').value;

        const dates = Array.from(document.querySelectorAll('.extra-date'))
            .map(input => input.value)
            .filter(d => d !== '')
            .map(d => {
                const dateObj = new Date(d);
                const day = String(dateObj.getDate()).padStart(2, '0');
                const month = String(dateObj.getMonth() + 1).padStart(2, '0');
                return `${day}.${month}`;
            });

        const uniqueDates = [...new Set(dates)];
        uniqueDates.sort((a, b) => {
            const [dayA, monthA] = a.split('.').map(Number);
            const [dayB, monthB] = b.split('.').map(Number);
            return monthA !== monthB ? monthA - monthB : dayA - dayB;
        });

        const combined = [parity, ...uniqueDates].join(', ').trim().replace(/^,|,$/, '');
        document.getElementById('hiddenDataField').value = combined;
        console.log("=> Сформированное DATA:", combined);

        const form = e.target;
        const formData = new FormData(form);

        const response = await fetch('/SchedulerNPubl/Create', {
            method: 'POST',
            body: formData
        });

        if (response.ok) {
            alert("Занятие успешно добавлено!");
            document.getElementById('createModal').style.display = 'none';
            form.reset();

            const groupId = document.getElementById('groupSelect').value;
            const tip = document.getElementById('tipSelect').value;
            const semester = document.getElementById('semesterSelect').value;
            const year = document.getElementById('yearSelect').value;

            const params = new URLSearchParams();
            if (groupId) params.append('groupId', groupId);
            if (tip) params.append('tip', tip);
            if (semester) params.append('semester', semester);
            if (year) params.append('year', year);

            window.location.href = `/SchedulerNPubl/Index${params.toString() ? '?' + params.toString() : ''}`;
        } else {
            const errorText = await response.text();
            alert("Ошибка при добавлении: " + errorText);
        }
    });
</script>

@*                                    Для обновления вывода расписания *@

<script>
    function updateSchedule() {
        const groupId = document.getElementById('groupSelect').value;
        const tip = document.getElementById('tipSelect').value;
        const semester = document.getElementById('semesterSelect').value;
        const year = document.getElementById('yearSelect').value;

        const params = new URLSearchParams();

        if (groupId) params.append('groupId', groupId);
        if (tip) params.append('tip', tip);
        if (semester) params.append('semester', semester);
        if (year) params.append('year', year);

        const query = params.toString();
        window.location.href = `/SchedulerNPubl/Index${query ? '?' + query : ''}`;
    }

    // Назначение обработчиков на все селекты
    document.getElementById('groupSelect').addEventListener('change', updateSchedule);
    document.getElementById('tipSelect').addEventListener('change', updateSchedule);
    document.getElementById('semesterSelect').addEventListener('change', updateSchedule);
    document.getElementById('yearSelect').addEventListener('change', updateSchedule);
</script>


@*                                     В Ы В О Д    Р А С П И С А Н И Я *@

<h2 style="text-align:center; margin-top: 30px;">
    @if (filteredGroupNo.HasValue)
    {
        <text>Группа @filteredGroupNo</text>
    }
    else
    {
        <text>Все группы</text>
    }
</h2>

<table>
    <thead>
        <tr>
            <th>Группа</th>
            <th>День</th>
            <th>Время</th>
            <th>Дата</th>
            <th>Дисциплина</th>
            <th>Вид занятия</th>
            <th>Аудитория</th>
            <th>Здание</th>
            <th>Преподаватель</th>
            <th>Тип занятия</th>
            <th>Год расписания</th>
            <th>Семестр</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.GROUPNO</td>
                <td>@item.DEN</td>
                <td>@item.VREM</td>
                <td>@item.DATA</td>
                <td>@item.Discipline?.NAME</td>
                <td>@item.FORM_ZAN</td>
                <td>@item.AUDITORIYA</td>
                <td>@item.BUILDING_ID</td>
                <td>@item.PREPODAVATEL</td>
                <td>@(item.TIP == 1 ? "дневное" : (item.TIP == 2 ? "экзамен" : "заочное"))</td>
                <td>@item.YEARF</td>
                <td>@(item.SEMESTR == 1 ? "осенний" : "весенний")</td>
                <td><button class="transferBtn">Перенести</button></td>
                <td>
                    <form asp-action="Delete" method="post" style="display:inline;">
                        <input type="hidden" name="ID" value="@item.LESSON_ID" />
                        <input type="hidden" name="groupId" value="@ViewBag.SelectedGroupId" />
                        <input type="hidden" name="tip" value="@ViewBag.SelectedTip" />
                        <input type="hidden" name="semester" value="@ViewBag.SelectedSemester" />
                        <input type="hidden" name="year" value="@ViewBag.SelectedYear" />
                        <button type="submit" class="btn btn-danger">Удалить</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>