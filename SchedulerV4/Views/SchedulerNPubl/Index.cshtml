@model List<SchedulerV4.Models.ScheduleNPublEntity>

@{
    ViewData["Title"] = "Расписание";
    var groupList = ViewBag.GroupList as List<SelectListItem>;
    int? filteredGroupNo = ViewBag.FilteredGroupNo as int?;
}

<h1>Расписание занятий</h1>

<div class="form-row">
    <label for="groupSelect">Номер группы:</label>
    <select id="groupSelect" name="groupId">
        <option value="">-- Все группы --</option>
        @foreach (var group in groupList)
        {
            <option value="@group.Value">@group.Text</option>
        }
    </select>
    <button type="button" id="showScheduleBtn">Показать расписание</button>
</div>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Успешно!</strong> @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Ошибка!</strong> @TempData["ErrorMessage"]
    </div>
}
<button type="button" onclick="location.href='/SchedulerNPubl/Create'">Добавить занятие</button>
<h2 style="text-align:center; margin-top: 30px;">
    @if (filteredGroupNo.HasValue)
    {
        <text>Группа @filteredGroupNo</text>
    }
    else
    {
        <text>Все группы</text>
    }
</h2>

<table>
    <thead>
        <tr>
            <th>Группа</th>
            <th>День</th>
            <th>Время</th>
            <th>Дата</th>
            <th>Дисциплина</th>
            <th>Вид занятия</th>
            <th>Аудитория</th>
            <th>Здание</th>
            <th>Преподаватель</th>
            <th>Тип занятия</th>
            <th>Год расписания</th>
            <th>Семестр</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.GROUPNO</td>
                <td>@item.DEN</td>
                <td>@item.VREM</td>
                <td>@item.DATA</td>
                <td>@item.Discipline?.NAME</td>
                <td>@item.FORM_ZAN</td>
                <td>@item.AUDITORIYA</td>
                <td>@item.BUILDING_ID</td>
                <td>@item.PREPODAVATEL</td>
                <td>@(item.TIP == 1 ? "дневное" : (item.TIP == 2 ? "экзамен" : "заочное"))</td>
                <td>@item.YEARF</td>
                <td>@(item.SEMESTR == 1 ? "осенний" : "весенний")</td>
                <td><button class="transferBtn">Перенести</button></td>
                <td>
                    <form asp-action="Delete" method="post" style="display:inline;">
                        <input type="hidden" name="ID" value="@item.LESSON_ID" />
                        <button type="submit" class="btn btn-danger">Удалить</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    document.getElementById('showScheduleBtn').addEventListener('click', () => {
        const groupId = document.getElementById('groupSelect').value;
        const query = groupId ? `?groupId=${groupId}` : '';
        window.location.href = `/SchedulerNPubl/Index${query}`;
    });
</script>

<style>
    .add-btn {
        display: inline-block;
        padding: 10px 25px;
        font-size: 17px;
        background-color: #28a745;
        color: white;
        border-radius: 6px;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

        .add-btn:hover {
            background-color: #218838;
        }
    .form-row {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 20px;
        background: #fff;
        padding: 30px 40px;
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        max-width: 800px;
        margin: 0 auto 40px;
    }

    label {
        font-size: 17px;
        color: #555;
        width:auto;
    }

    select {
        width: 350px;
        height: 50px;
        font-size: 17px;
        padding: 0 15px;
        border: 2px solid #ddd;
        border-radius: 8px;
        transition: border-color 0.3s ease;
        background-color: white;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23333' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 15px center;
        background-size: 20px 20px;
    }

        select:focus {
            border-color: #0088CE;
            outline: none;
            box-shadow: 0 0 8px rgba(0, 136, 206, 0.3);
        }

    button {
        font-size: 17px;
        height: 44px;
        padding: 0 25px;
        background: #0088CE;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        width: auto;
    }

        button:hover {
            background: #006fa1;
        }

    table {
        width: 100%;
        border-collapse: collapse;
        background: white;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    th, td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
        font-size: 12px;
    }

    th {
        background-color: #0088CE;
        color: white;
    }
</style>
<div class="modal" id="transferModal">
    <div class="modal-content">
        <div class="modal-header">Перенос занятия</div>
        <form id="transferForm">
            <div class="modal-row">
                <label for="newDate">Дата:</label>
                <input type="date" id="newDate" name="newDate" required />
            </div>
            <div class="modal-row">
                <label for="newTime">Время:</label>
                <input type="text" id="newTime" name="newTime" placeholder="например, 14:00-15:30" required />
            </div>
            <div class="modal-row">
                <label for="newBuilding">Здание:</label>
                <select id="newBuilding" name="newBuilding" required>
                    <option value="" disabled selected>Выберите здание</option>
                    <option value="Главный корпус">1</option>
                    <option value="Физический корпус">2</option>
                    <option value="Экономический корпус">7</option>
                    <option value="Лабораторный корпус">8</option>
                </select>
            </div>
            <div class="modal-row">
                <label for="newRoom">Аудитория:</label>
                <input type="text" id="newRoom" name="newRoom" placeholder="Введите аудиторию" />
            </div>
            <div class="modal-row">
                <label for="newType">Тип занятия:</label>
                <select id="newType" name="newType" required>
                    <option value="" disabled selected>Выберите тип занятия</option>
                    <option value="Лекция">Лекция</option>
                    <option value="Практика">Практика</option>
                    <option value="Лабораторная работа">Лабораторная работа</option>
                </select>
            </div>
            <div class="modal-row">
                <label for="newTeacher">Преподаватель:</label>
                <select id="newTeacher" name="newTeacher" required>
                    <option value="" disabled selected>Выберите преподавателя</option>
                    <option value="Иванов И.И.">Иванов И.И.</option>
                    <option value="Петров П.П.">Петров П.П.</option>
                    <option value="Сидоров С.С.">Сидоров С.С.</option>
                    <option value="Кузнецова К.К.">Кузнецова К.К.</option>
                </select>
            </div>
            <div class="modal-footer">
                <button type="submit">Сохранить</button>
                <button type="button" id="cancelBtn">Отмена</button>
            </div>
        </form>
    </div>
</div>

<style>
    body {
        color: #333;
    }

    h1 {
        font-size: 40px;
        text-align: center;
        margin-bottom: 30px;
    }

    h2 {
        font-size: 30px;
        text-align: center;
        margin-bottom: 30px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        background: white;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    th, td {
        border: 1px solid #ddd;
        padding: 8px 10px;
        text-align: center;
        font-size: 15px;
    }

    th {
        background-color: #0088CE;
        color: white;
    }

    button {
        padding: 5px 10px;
        background-color: #0088CE;
        border: none;
        color: white;
        border-radius: 4px;
        cursor: pointer;
    }

        button:hover {
            background-color: #006fa1;
        }
    /* Модальное окно */
    .modal {
        display: none; /* скрыто по умолчанию */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background: white;
        padding: 25px 30px;
        border-radius: 10px;
        width: 500px;
        max-width: 90%;
        box-shadow: 0 8px 30px rgba(0,0,0,0.3);
    }

    .modal-header {
        font-size: 28px;
        margin-bottom: 20px;
        font-weight: bold;
        text-align: center;
    }

    .modal-row {
        margin-bottom: 15px;
        display: flex;
        align-items: center;
    }

        .modal-row label {
            width: 130px;
            font-size: 18px;
        }

        .modal-row input[type="text"],
        .modal-row input[type="date"],
        .modal-row input[type="time"],
        .modal-row select {
            flex-grow: 1;
            font-size: 18px;
            padding: 6px 10px;
            border: 1.5px solid #ccc;
            border-radius: 6px;
        }

    .modal-footer {
        margin-top: 25px;
        text-align: center;
    }

        .modal-footer button {
            margin: 0 10px;
            padding: 10px 25px;
            font-size: 18px;
        }
</style>

<script>
    // Работа с модальным окном
    const modal = document.getElementById('transferModal');
    const cancelBtn = document.getElementById('cancelBtn');
    const transferForm = document.getElementById('transferForm');

    document.querySelectorAll('.transferBtn').forEach(button => {
      button.addEventListener('click', () => {
        modal.style.display = 'flex';
      });
    });

    cancelBtn.addEventListener('click', () => {
      modal.style.display = 'none';
      transferForm.reset();
    });

    transferForm.addEventListener('submit', (e) => {
      e.preventDefault();
      alert('Данные сохранены!');
      modal.style.display = 'none';
      transferForm.reset();
    });

    // Закрытие модального по клику вне окна
    window.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.style.display = 'none';
        transferForm.reset();
      }
    });
</script>